library(readr)
titanic <- read_csv("C:/knot4u/UTD/6301/Lecture Material/Datasets/Lecture-8-Data/titanic.csv")
View(titanic)
# We look for associations between the sex, age, and
# ticket class for the passengers and their
# survival rate
# First we select out the columns of interest
myData = cbind(titanic[,"pclass"],titanic[,"survived"],titanic[,"sex"],titanic[,"age"])
dim(myData)
summary(myData)
myDataClean = na.omit((myData))
dim(myDataClean)
summary(myDataClean)
head(myDataClean)
# We will need to convert the data to factors before
# We can use ARM. A helpful tool: ifelse.
?ifelse
myDataClean = na.omit((myData))
myDataClean[,1]=as.factor(myDataClean[,1])
myDataClean[,2]=as.factor(myDataClean[,2])
myDataClean[,3]=as.factor(myDataClean[,3])
summary(myDataClean)
myDataClean[,4] = ifelse(myDataClean[,4]<18,"child", "adult")
myDataClean[,4]=as.factor(myDataClean[,4])
summary(myDataClean)
# Let's just change the column names to clean up
colnames(myDataClean) = c("Class","Survived","Sex","Age")
library("arules", lib.loc="~/R/win-library/3.3")
# Try to do rules mining ...
rules = apriori(myDataClean)
# You may need to convert myDataClean into a dataframe first
# Inspect the rules ...
inspect(rules)
# General idea: If Rule 1 is superior to Rule 2 (Rule 2 includes the
# antecedent of Rule 1) and Rule 1 has better lift, Rule 2 is redundant
# Here we add in some restrictions on rule length, support, confidence,
# and consequent
rules <- apriori(myDataClean, parameter = list(minlen=2, supp=0.005, conf=0.8), appearance = list(rhs=c("Survived=0", "Survived=1"), default = "lhs"))
inspect(rules)
# Let's sort the rules by lift ...
rules.sorted = sort(rules, by="lift")
inspect(rules.sorted)
# We can do some plotting with the arulesViz package
library("arulesViz", lib.loc="~/R/win-library/3.3")
plot(rules)
# We get a confidence/support plot
plot(rules, method="graph", control=list(type="items"))
plot(rules, method="paracoord", control=list(reorder=TRUE))
# Next, let's look at adultData
library(readr)
adultData <- read_csv("C:/knot4u/UTD/6301/Lecture Material/Datasets/Lecture-8-Data/adultData.txt")
View(adultData)
adult = adultData
# We need to convert everything to factors!
# First let's drop a few columns
adult[,"fnlwgt"] = NULL
adult[,"education-num"] = NULL
summary(adult)
# Now we convert numerical features to factors
adult[[ "age"]] <- ordered(cut(adult[[ "age"]], c(15,25,45,65,100)), labels = c("Young", "Middle", "Older", "Senior"))
adult[[ "hours-per-week"]] <- ordered(cut(adult[[ "hours-per-week"]], c(0,25,40,60,168)), labels = c("Part-time", "Full-time", "Over-time", "VeryHigh"))
adult[[ "capital-gain"]] <- ordered(cut(adult[[ "capital-gain"]], c(-Inf,0, median(adult[["capital-gain"]][adult[["capital-gain"]]>0]), Inf)), labels = c("None", "Low", "High"))
adult[[ "capital-loss"]] <- ordered(cut(adult[[ "capital-loss"]], c(-Inf,0, median(adult[["capital-loss"]][adult[["capital-loss"]]>0]), Inf)), labels = c("None", "Low", "High"))
summary(adult)
adult[["workclass"]]=as.factor(adult[["workclass"]])
adult[["education"]]=as.factor(adult[["education"]])
adult[["marital-status"]]=as.factor(adult[["marital-status"]])
adult[["occupation"]]=as.factor(adult[["occupation"]])
adult[["relationship"]]=as.factor(adult[["relationship"]])
adult[["race"]]=as.factor(adult[["race"]])
adult[["sex"]]=as.factor(adult[["sex"]])
adult[["native-country"]]=as.factor(adult[["native-country"]])
adult[["income"]]=as.factor(adult[["income"]])
summary(adult)
rules <- apriori(adult, parameter = list(supp = 0.5, conf = 0.85, target = "rules", minlen=2))
# You may need to convert adult to a transactional df using
# adult2 = as("adult", transactions)
rules.sorted = sort(rules,by="lift")
inspect(rules.sorted)
plot(rules)
# Finally, we turn our attention to the consumer survey
# dataset
# Notice when we load this, we want to translate
# the NA's into '0'
library(readr)
consumer_survey <- read_csv("C:/knot4u/UTD/6301/Lecture Material/Datasets/Lecture-8-Data/consumer-survey.csv")
View(consumer_survey)
summary(consumer_survey)
myData = consumer_survey
myData[is.na(myData)]=0
# Note we could have done this during the import too
summary(myData)
dim(myData)
myData = myData[,-44]
myData = myData[,-43]
myData = myData[,-42]
myData[["Q_1B10"]]=NULL
myData[["Q_2BCL"]]=NULL
myData[["Q_2BCNO"]]=NULL
summary(myData)
myDataLogical = ifelse(myData == 1, TRUE, FALSE)
summary(myDataLogical)
# Now we build some rules ...
rules <- apriori(myDataLogical, parameter = list(supp = 0.5, conf = 0.85, target = "rules", minlen=2))
inspect(rules)
rules <- apriori(myDataLogical, parameter = list(supp = 0.5, conf = 0.50, target = "rules", minlen=2))
inspect(rules)
savehistory("C:/knot4u/UTD/6301/Lecture Material/R Scripts/Lecture-8.Rhistory")
